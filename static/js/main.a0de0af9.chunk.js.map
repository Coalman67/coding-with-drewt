{"version":3,"sources":["types.ts","components/Todo/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Severity","Extreme","Circle","color","className","style","backgroundColor","Todo","props","severity","Low","title","todos","Medium","App","console","log","list","push","map","todo","i","High","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAYA,E,oEAAAA,K,YAAAA,E,gBAAAA,E,cAAAA,E,eAAAA,M,KAiBEA,EAASC,QAFvB,I,OCPMC,EAAyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,qBAAKC,UAAU,SAASC,MAAO,CAAEC,gBAAiBH,MAEnGI,EAAqC,SAACC,GAAW,IAAD,EACnDC,EAAQ,UAAGD,EAAMC,gBAAT,QAAqBT,EAASU,IAE5C,OACI,sBAAKN,UAAU,OAAf,UACI,cAAC,EAAD,CAAQD,MAAOM,IADnB,SAEWD,EAAMG,UCXnBC,EAAqB,CACzB,CACED,MAAO,qBACPF,SAAUT,EAASa,QAErB,CACEF,MAAO,+BAET,CACEA,MAAO,QACPF,SAAUT,EAASC,UAwCRa,MApCf,WAEEC,QAAQC,IAAI,eAEZ,IAAMC,EAAiB,CAAC,QAAS,QAAS,QAAS,QACjD,UAAW,QAAS,QAAS,gBAQ/B,OANAF,QAAQC,IAAIC,GAEZA,EAAKC,KAAK,QAAS,SAEnBH,QAAQC,IAAIC,GAGV,qBAAKb,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UAGGQ,EAAMO,KAAI,SAACC,EAAMC,GAAP,OAAa,cAAC,EAAD,eAAkBD,GAAPC,MAEnC,uBAGA,cAAC,EAAD,CAAMV,MAAM,cACZ,cAAC,EAAD,CAAMA,MAAM,UAAUF,SAAUT,EAASC,UACzC,cAAC,EAAD,CAAMU,MAAM,aACZ,cAAC,EAAD,CAAMA,MAAM,kBACZ,cAAC,EAAD,CAAMA,MAAM,mBAAmBF,SAAUT,EAASsB,aChC3CC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a0de0af9.chunk.js","sourcesContent":["export enum Severity {\r\n    Low = 'green',\r\n    Medium = 'yellow',\r\n    High = 'orange',\r\n    Extreme = 'red'\r\n}\r\n\r\nexport interface TodoProps {\r\n    /** The title of the TODO item. */\r\n    title: string\r\n    /** The importance of the TODO item. */\r\n    severity?: Severity\r\n}\r\n\r\n\r\nconst todo: TodoProps = {\r\n    title: 'Pet Jer',\r\n    severity: Severity.Extreme\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const string: string = 'hello'\r\n// const number: number = 256\r\n// const boolean: boolean = true\r\n// const array: string[] = []\r\n// const object: object = {}\r\n\r\n\r\n// interface Shoe {\r\n//     color: 'black' | 'white' | '...'\r\n//     brand: 'nike' | 'addidas' | '...',\r\n//     cost: number\r\n//     haveLaces: boolean\r\n//     modelYear: Date\r\n// }    \r\n\r\n// const shoe: Shoe = {\r\n//     brand: 'nike',\r\n//     cost: 52,\r\n//     helloKitty: false\r\n// }\r\n// const myShoe = {\r\n//     band: 'addidas',\r\n//     cost: 'nothing',\r\n//     helloKitten: true\r\n// }\r\n\r\nconst randomThing: object = {}","import React, { FunctionComponent } from 'react'\r\nimport './Todo.css'\r\nimport { Severity, TodoProps } from '../../types'\r\n\r\ninterface CircleProps {\r\n    color: string\r\n}\r\n\r\nconst Circle: FunctionComponent<CircleProps> = ({ color }) => <div className=\"circle\" style={{ backgroundColor: color }} />\r\n\r\nexport const Todo: FunctionComponent<TodoProps> = (props) => {\r\n    const severity = props.severity ?? Severity.Low\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <Circle color={severity} />\r\n            Task: {props.title}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Todo } from './components/Todo';\r\nimport { Severity, TodoProps } from './types';\r\n\r\nconst todos: TodoProps[] = [\r\n  {\r\n    title: 'Take out the trash',\r\n    severity: Severity.Medium\r\n  },\r\n  {\r\n    title: 'See Despicable Me 2...again'\r\n  },\r\n  {\r\n    title: 'hello',\r\n    severity: Severity.Extreme,\r\n  }\r\n]\r\n\r\nfunction App() {\r\n\r\n  console.log('hello fiona')\r\n\r\n  const list: string[] = ['hello', 'stars', 'birbs', 'mills',\r\n    'Oranges', 'waves', 'ramen', 'sort laundry']\r\n\r\n  console.log(list)\r\n\r\n  list.push('hills', 'canoe')\r\n\r\n  console.log(list)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        {/* The canvas */}\r\n\r\n        {todos.map((todo, i) => <Todo key={i} {...todo} />)}\r\n\r\n        <hr />\r\n        {/* <Todo title=\"Take out the trash\" severity={Severity.Medium} />\r\n        <Todo title=\"See Despicable Me 2...again\" /> */}\r\n        <Todo title=\"Drink Tea\" />\r\n        <Todo title=\"Pet Jer\" severity={Severity.Extreme} />\r\n        <Todo title=\"I did it\" />\r\n        <Todo title=\"woot woooooot\" />\r\n        <Todo title=\"Clean my laundry\" severity={Severity.High} />\r\n\r\n\r\n        {/* End of canvas */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}