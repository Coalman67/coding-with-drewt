{"version":3,"sources":["types.ts","components/Todo/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Severity","Extreme","Circle","color","className","style","backgroundColor","TodoItem","props","severity","Low","title","Medium","App","console","log","useState","chores","setChores","type","onClick","newChores","High","doWhatOliviaSays","map","chore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAAYA,E,4EAAAA,K,YAAAA,E,gBAAAA,E,cAAAA,E,eAAAA,M,KAiBEA,EAASC,QAFvB,I,OCPMC,EAAyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,qBAAKC,UAAU,SAASC,MAAO,CAAEC,gBAAiBH,MAEnGI,EAAoC,SAACC,GAAW,IAAD,EAClDC,EAAQ,UAAGD,EAAMC,gBAAT,QAAqBT,EAASU,IAE5C,OACI,sBAAKN,UAAU,OAAf,UACI,cAAC,EAAD,CAAQD,MAAOM,IADnB,SAEWD,EAAMG,UCRXX,EAASY,OAOTZ,EAASC,QA0ERY,MAtEf,WAEEC,QAAQC,IAAI,eAFC,MAIeC,mBAAiB,IAJhC,mBAINC,EAJM,KAIEC,EAJF,KAsBb,OAhBAJ,QAAQC,IAAIE,GAiBV,qBAAKb,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UAIE,wBAAQe,KAAK,SAASf,UAAU,MAE9BgB,QAEE,YAxBe,WAGvB,IAAMC,EAAS,sBACVJ,GADU,CAEb,CAAEN,MAAO,gBAAiBF,SAAUT,EAASsB,MAC7C,CAAEX,MAAO,kBAAmBF,SAAUT,EAASC,WAGjDiB,EAAUG,GAEVP,QAAQC,IAAIM,GAcFE,IALN,6BAWA,uBAGCN,EAAOO,KAAI,SAACC,GACX,OACE,cAAC,EAAD,CAAUd,MAAOc,EAAMd,MAAOF,SAAUgB,EAAMhB,cASlD,6BC1DOiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0c125324.chunk.js","sourcesContent":["export enum Severity {\r\n    Low = 'green',\r\n    Medium = 'yellow',\r\n    High = 'orange',\r\n    Extreme = 'red'\r\n}\r\n\r\nexport interface Todo {\r\n    /** The title of the TODO item. */\r\n    title: string\r\n    /** The importance of the TODO item. */\r\n    severity?: Severity\r\n}\r\n\r\n\r\nconst todo: Todo = {\r\n    title: 'Pet Jer',\r\n    severity: Severity.Extreme\r\n}\r\n\r\n// <Todo title=\"Pet Jer\" severity={Severity.Extreme} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const string: string = 'hello'\r\n// const number: number = 256\r\n// const boolean: boolean = true\r\n// const array: string[] = []\r\n// const object: object = {}\r\n\r\n\r\n// interface Shoe {\r\n//     color: 'black' | 'white' | '...'\r\n//     brand: 'nike' | 'addidas' | '...',\r\n//     cost: number\r\n//     haveLaces: boolean\r\n//     modelYear: Date\r\n// }    \r\n\r\n// const shoe: Shoe = {\r\n//     brand: 'nike',\r\n//     cost: 52,\r\n//     helloKitty: false\r\n// }\r\n// const myShoe = {\r\n//     band: 'addidas',\r\n//     cost: 'nothing',\r\n//     helloKitten: true\r\n// }\r\n\r\nconst randomThing: object = {}","import React, { FunctionComponent } from 'react'\r\nimport './Todo.css'\r\nimport { Severity, Todo } from '../../types'\r\n\r\ninterface CircleProps {\r\n    color: string\r\n}\r\n\r\nconst Circle: FunctionComponent<CircleProps> = ({ color }) => <div className=\"circle\" style={{ backgroundColor: color }} />\r\n\r\nexport const TodoItem: FunctionComponent<Todo> = (props) => {\r\n    const severity = props.severity ?? Severity.Low\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <Circle color={severity} />\r\n            Task: {props.title}\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport { TodoItem } from './components/Todo';\r\nimport { Severity, Todo } from './types';\r\n\r\nconst todos: Todo[] = [\r\n  {\r\n    title: 'Take out the trash',\r\n    severity: Severity.Medium\r\n  },\r\n  {\r\n    title: 'See Despicable Me 2...again'\r\n  },\r\n  {\r\n    title: 'hello',\r\n    severity: Severity.Extreme,\r\n  }\r\n]\r\n\r\nfunction App() {\r\n\r\n  console.log('hello fiona')\r\n\r\n  const [chores, setChores] = useState<Todo[]>([])\r\n\r\n  console.log(chores)\r\n\r\n  const doWhatOliviaSays = () => {\r\n    // When a user clicks a button do this:\r\n\r\n    const newChores = [\r\n      ...chores,\r\n      { title: 'Make your bed', severity: Severity.High },\r\n      { title: 'Wash the dishes', severity: Severity.Extreme }\r\n    ]\r\n\r\n    setChores(newChores)\r\n\r\n    console.log(newChores)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        {/* The canvas */}\r\n\r\n\r\n        <button type=\"button\" className=\"btn\"\r\n          // WHEN A USER CLICKS\r\n          onClick={\r\n            // DO THIS\r\n            () => {\r\n              doWhatOliviaSays()\r\n            }\r\n          }>\r\n          Add to Our List\r\n        </button>\r\n\r\n        <hr />\r\n\r\n\r\n        {chores.map((chore) => {\r\n          return (\r\n            <TodoItem title={chore.title} severity={chore.severity} />\r\n          )\r\n        })}\r\n\r\n        {/* \r\n        [1, 4, 9, 16]\r\n        [2, 8, 18, 32]\r\n         */}\r\n\r\n        <hr />\r\n        {/* <Todo title=\"Take out the trash\" severity={Severity.Medium} />\r\n        <Todo title=\"See Despicable Me 2...again\" /> */}\r\n        {/* <TodoItem title=\"Drink Tea\" />\r\n        <TodoItem title=\"Pet Jer\" severity={Severity.Extreme} />\r\n        <TodoItem title=\"I did it\" />\r\n        <TodoItem title=\"woot woooooot\" />\r\n        <TodoItem title=\"Clean my laundry\" severity={Severity.High} />\r\n        <TodoItem title=\"make the bed\" severity={Severity.Medium} />\r\n        <TodoItem title=\"no stop just stop we're not doing this anymore\" /> */}\r\n\r\n        {/* End of canvas */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}